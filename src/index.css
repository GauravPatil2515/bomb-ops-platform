@tailwind base;
@tailwind components;
@tailwind utilities;

/* DEFUSE PROTOCOL - Mission Control Design System
All colors MUST be HSL for perfect theming.
*/

@layer base {
  :root {
    /* Mission Control Dark Theme */
    --background: 220 15% 8%;
    --foreground: 120 100% 85%;

    --card: 220 15% 10%;
    --card-foreground: 120 100% 85%;

    --popover: 220 15% 12%;
    --popover-foreground: 120 100% 85%;

    /* Neon Green Primary (Mission Status) */
    --primary: 120 100% 50%;
    --primary-foreground: 220 15% 8%;
    --primary-glow: 120 100% 60%;

    /* Electric Blue Secondary (System Active) */
    --secondary: 195 100% 50%;
    --secondary-foreground: 220 15% 8%;
    --secondary-glow: 195 100% 60%;

    /* Danger Red (Critical Alert) */
    --destructive: 0 100% 55%;
    --destructive-foreground: 220 15% 8%;
    --destructive-glow: 0 100% 65%;

    /* Terminal Green Muted */
    --muted: 120 20% 15%;
    --muted-foreground: 120 30% 65%;

    /* Warning Amber */
    --accent: 45 100% 50%;
    --accent-foreground: 220 15% 8%;
    --accent-glow: 45 100% 60%;

    /* Interface Elements */
    --border: 120 20% 20%;
    --input: 220 15% 12%;
    --ring: 120 100% 50%;

    --radius: 0.375rem;

    /* Mission Control Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    --gradient-secondary: linear-gradient(135deg, hsl(var(--secondary)), hsl(var(--secondary-glow)));
    --gradient-danger: linear-gradient(135deg, hsl(var(--destructive)), hsl(var(--destructive-glow)));
    --gradient-terminal: linear-gradient(135deg, hsl(var(--background)), hsl(var(--muted)));
    
    /* Mission Control Shadows */
    --shadow-neon: 0 0 20px hsl(var(--primary-glow) / 0.3);
    --shadow-danger: 0 0 20px hsl(var(--destructive-glow) / 0.3);
    --shadow-glow: 0 4px 20px -2px hsl(var(--primary) / 0.2);

    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --animation-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
  }
}

@layer components {
  /* Mission Control Components */
  .terminal-card {
    @apply bg-card border border-border rounded-lg p-6 shadow-lg;
    background: linear-gradient(135deg, hsl(var(--card)), hsl(var(--muted) / 0.5));
    box-shadow: var(--shadow-glow), inset 0 1px 0 hsl(var(--border));
  }

  .neon-glow {
    box-shadow: var(--shadow-neon);
  }

  .danger-glow {
    box-shadow: var(--shadow-danger);
  }

  .countdown-display {
    @apply font-mono text-4xl font-bold tracking-wider;
    text-shadow: 0 0 10px currentColor;
    animation: var(--animation-pulse);
  }

  .scanlines {
    position: relative;
  }

  .scanlines::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      transparent 50%, 
      hsl(var(--primary) / 0.03) 50%
    );
    background-size: 100% 4px;
    pointer-events: none;
    animation: scanlines 0.1s linear infinite;
  }

  .glitch-text {
    position: relative;
    animation: glitch 2s infinite;
  }

  .mission-button {
    @apply px-6 py-3 font-bold text-primary-foreground bg-primary rounded transition-all duration-300;
    background: var(--gradient-primary);
    box-shadow: var(--shadow-neon);
    transform: translateY(0);
    transition: var(--transition-smooth);
  }

  .mission-button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-neon), 0 8px 25px -8px hsl(var(--primary) / 0.6);
  }

  .danger-button {
    @apply px-6 py-3 font-bold text-destructive-foreground bg-destructive rounded transition-all duration-300;
    background: var(--gradient-danger);
    box-shadow: var(--shadow-danger);
  }

  .status-online {
    @apply text-primary;
    text-shadow: 0 0 8px currentColor;
  }

  .status-danger {
    @apply text-destructive;
    text-shadow: 0 0 8px currentColor;
    animation: var(--animation-pulse);
  }

  .terminal-input {
    @apply bg-input border border-border rounded px-4 py-2 text-foreground;
    box-shadow: inset 0 2px 4px hsl(var(--background) / 0.5);
  }

  .terminal-input:focus {
    @apply ring-2 ring-primary border-primary outline-none;
    box-shadow: var(--shadow-neon), inset 0 2px 4px hsl(var(--background) / 0.5);
  }
}

@layer utilities {
  .text-glow {
    text-shadow: 0 0 10px currentColor;
  }

  .gradient-primary {
    background: var(--gradient-primary);
  }

  .gradient-secondary {
    background: var(--gradient-secondary);
  }

  .gradient-danger {
    background: var(--gradient-danger);
  }

  .gradient-terminal {
    background: var(--gradient-terminal);
  }
}

@keyframes glitch {
  0%, 100% { transform: translateX(0); }
  20% { transform: translateX(-2px); }
  40% { transform: translateX(2px); }
  60% { transform: translateX(-1px); }
  80% { transform: translateX(1px); }
}

@keyframes scanlines {
  0% { transform: translateY(0); }
  100% { transform: translateY(4px); }
}